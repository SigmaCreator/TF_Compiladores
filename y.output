   0  $accept : program $end

   1  program : classList

   2  classList : classList class
   3            | class

   4  $$1 :

   5  class : CLASS IDENT $$1 '{' atribs methods '}'

   6  $$2 :

   7  class : CLASS IDENT EXTENDS IDENT $$2 '{' atribs methods '}'

   8  $$3 :

   9  atribs : PRIVATE ':' $$3 declareList

  10  declareList : declare declareList
  11              |

  12  declare : type idList ';'

  13  type : INT
  14       | DOUBLE
  15       | BOOL
  16       | IDENT
  17       | VOID

  18  idList : idList ',' IDENT
  19         | IDENT

  20  methods : PUBLIC ':' methodList

  21  methodList : methodList method
  22             | method

  23  $$4 :

  24  $$5 :

  25  method : type IDENT $$4 '(' auxParamList ')' $$5 declareList block

  26  $$6 :

  27  $$7 :

  28  method : IDENT $$6 '(' auxParamList ')' $$7 declareList block

  29  $$8 :

  30  $$9 :

  31  method : OVERRIDE type IDENT $$8 '(' auxParamList ')' $$9 declareList block

  32  auxParamList : paramList
  33               |

  34  paramList : paramList ',' type IDENT
  35            | type IDENT

  36  block : '{' cmdList '}'

  37  cmdList : cmdList cmd
  38          |

  39  cmd : exp ';'
  40      | IF exp ':' cmd ELSE ':' cmd ENDIF
  41      | IF exp ':' cmd ENDIF

  42  $$10 :

  43  cmd : WHILE $$10 exp ':' cmd ENDWHILE

  44  $$11 :

  45  cmd : FOR $$11 exp ';' exp ';' exp ':' ENDFOR
  46      | PRINT '(' argList ')' ';'
  47      | SCAN '(' IDENT ')' ';'
  48      | block
  49      | BREAK

  50  $$12 :

  51  cmd : RETURN exp $$12 ';'

  52  auxArgList : argList
  53             |

  54  argList : argList ',' exp
  55          | exp

  56  exp : exp '+' exp
  57      | exp '*' exp
  58      | exp '-' exp
  59      | exp '/' exp
  60      | exp '<' exp
  61      | exp '>' exp
  62      | exp AND exp
  63      | NUMINT
  64      | NUMDOUBLE
  65      | '(' exp ')'
  66      | exp '=' exp
  67      | IDENT '(' auxArgList ')'

  68  $$13 :

  69  exp : NEW IDENT $$13 '(' auxArgList ')'
  70      | IDENT

state 0
	$accept : . program $end  (0)

	CLASS  shift 1
	.  error

	program  goto 2
	classList  goto 3
	class  goto 4


state 1
	class : CLASS . IDENT $$1 '{' atribs methods '}'  (5)
	class : CLASS . IDENT EXTENDS IDENT $$2 '{' atribs methods '}'  (7)

	IDENT  shift 5
	.  error


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : classList .  (1)
	classList : classList . class  (2)

	CLASS  shift 1
	$end  reduce 1

	class  goto 6


state 4
	classList : class .  (3)

	.  reduce 3


state 5
	class : CLASS IDENT . $$1 '{' atribs methods '}'  (5)
	class : CLASS IDENT . EXTENDS IDENT $$2 '{' atribs methods '}'  (7)
	$$1 : .  (4)

	EXTENDS  shift 7
	'{'  reduce 4

	$$1  goto 8


state 6
	classList : classList class .  (2)

	.  reduce 2


state 7
	class : CLASS IDENT EXTENDS . IDENT $$2 '{' atribs methods '}'  (7)

	IDENT  shift 9
	.  error


state 8
	class : CLASS IDENT $$1 . '{' atribs methods '}'  (5)

	'{'  shift 10
	.  error


state 9
	class : CLASS IDENT EXTENDS IDENT . $$2 '{' atribs methods '}'  (7)
	$$2 : .  (6)

	.  reduce 6

	$$2  goto 11


state 10
	class : CLASS IDENT $$1 '{' . atribs methods '}'  (5)

	PRIVATE  shift 12
	.  error

	atribs  goto 13


state 11
	class : CLASS IDENT EXTENDS IDENT $$2 . '{' atribs methods '}'  (7)

	'{'  shift 14
	.  error


state 12
	atribs : PRIVATE . ':' $$3 declareList  (9)

	':'  shift 15
	.  error


state 13
	class : CLASS IDENT $$1 '{' atribs . methods '}'  (5)

	PUBLIC  shift 16
	.  error

	methods  goto 17


state 14
	class : CLASS IDENT EXTENDS IDENT $$2 '{' . atribs methods '}'  (7)

	PRIVATE  shift 12
	.  error

	atribs  goto 18


state 15
	atribs : PRIVATE ':' . $$3 declareList  (9)
	$$3 : .  (8)

	.  reduce 8

	$$3  goto 19


state 16
	methods : PUBLIC . ':' methodList  (20)

	':'  shift 20
	.  error


state 17
	class : CLASS IDENT $$1 '{' atribs methods . '}'  (5)

	'}'  shift 21
	.  error


state 18
	class : CLASS IDENT EXTENDS IDENT $$2 '{' atribs . methods '}'  (7)

	PUBLIC  shift 16
	.  error

	methods  goto 22


state 19
	atribs : PRIVATE ':' $$3 . declareList  (9)
	declareList : .  (11)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	PUBLIC  reduce 11

	type  goto 28
	declareList  goto 29
	declare  goto 30


state 20
	methods : PUBLIC ':' . methodList  (20)

	IDENT  shift 31
	OVERRIDE  shift 32
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	.  error

	type  goto 33
	methodList  goto 34
	method  goto 35


state 21
	class : CLASS IDENT $$1 '{' atribs methods '}' .  (5)

	.  reduce 5


state 22
	class : CLASS IDENT EXTENDS IDENT $$2 '{' atribs methods . '}'  (7)

	'}'  shift 36
	.  error


state 23
	type : IDENT .  (16)

	.  reduce 16


state 24
	type : INT .  (13)

	.  reduce 13


state 25
	type : DOUBLE .  (14)

	.  reduce 14


state 26
	type : BOOL .  (15)

	.  reduce 15


state 27
	type : VOID .  (17)

	.  reduce 17


state 28
	declare : type . idList ';'  (12)

	IDENT  shift 37
	.  error

	idList  goto 38


state 29
	atribs : PRIVATE ':' $$3 declareList .  (9)

	.  reduce 9


state 30
	declareList : declare . declareList  (10)
	declareList : .  (11)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	PUBLIC  reduce 11
	'{'  reduce 11

	type  goto 28
	declareList  goto 39
	declare  goto 30


state 31
	type : IDENT .  (16)
	method : IDENT . $$6 '(' auxParamList ')' $$7 declareList block  (28)
	$$6 : .  (26)

	IDENT  reduce 16
	'('  reduce 26

	$$6  goto 40


state 32
	method : OVERRIDE . type IDENT $$8 '(' auxParamList ')' $$9 declareList block  (31)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	.  error

	type  goto 41


state 33
	method : type . IDENT $$4 '(' auxParamList ')' $$5 declareList block  (25)

	IDENT  shift 42
	.  error


state 34
	methods : PUBLIC ':' methodList .  (20)
	methodList : methodList . method  (21)

	IDENT  shift 31
	OVERRIDE  shift 32
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	'}'  reduce 20

	type  goto 33
	method  goto 43


state 35
	methodList : method .  (22)

	.  reduce 22


state 36
	class : CLASS IDENT EXTENDS IDENT $$2 '{' atribs methods '}' .  (7)

	.  reduce 7


state 37
	idList : IDENT .  (19)

	.  reduce 19


state 38
	declare : type idList . ';'  (12)
	idList : idList . ',' IDENT  (18)

	';'  shift 44
	','  shift 45
	.  error


state 39
	declareList : declare declareList .  (10)

	.  reduce 10


state 40
	method : IDENT $$6 . '(' auxParamList ')' $$7 declareList block  (28)

	'('  shift 46
	.  error


state 41
	method : OVERRIDE type . IDENT $$8 '(' auxParamList ')' $$9 declareList block  (31)

	IDENT  shift 47
	.  error


state 42
	method : type IDENT . $$4 '(' auxParamList ')' $$5 declareList block  (25)
	$$4 : .  (23)

	.  reduce 23

	$$4  goto 48


state 43
	methodList : methodList method .  (21)

	.  reduce 21


state 44
	declare : type idList ';' .  (12)

	.  reduce 12


state 45
	idList : idList ',' . IDENT  (18)

	IDENT  shift 49
	.  error


state 46
	method : IDENT $$6 '(' . auxParamList ')' $$7 declareList block  (28)
	auxParamList : .  (33)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	')'  reduce 33

	type  goto 50
	auxParamList  goto 51
	paramList  goto 52


state 47
	method : OVERRIDE type IDENT . $$8 '(' auxParamList ')' $$9 declareList block  (31)
	$$8 : .  (29)

	.  reduce 29

	$$8  goto 53


state 48
	method : type IDENT $$4 . '(' auxParamList ')' $$5 declareList block  (25)

	'('  shift 54
	.  error


state 49
	idList : idList ',' IDENT .  (18)

	.  reduce 18


state 50
	paramList : type . IDENT  (35)

	IDENT  shift 55
	.  error


state 51
	method : IDENT $$6 '(' auxParamList . ')' $$7 declareList block  (28)

	')'  shift 56
	.  error


state 52
	auxParamList : paramList .  (32)
	paramList : paramList . ',' type IDENT  (34)

	','  shift 57
	')'  reduce 32


state 53
	method : OVERRIDE type IDENT $$8 . '(' auxParamList ')' $$9 declareList block  (31)

	'('  shift 58
	.  error


state 54
	method : type IDENT $$4 '(' . auxParamList ')' $$5 declareList block  (25)
	auxParamList : .  (33)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	')'  reduce 33

	type  goto 50
	auxParamList  goto 59
	paramList  goto 52


state 55
	paramList : type IDENT .  (35)

	.  reduce 35


state 56
	method : IDENT $$6 '(' auxParamList ')' . $$7 declareList block  (28)
	$$7 : .  (27)

	.  reduce 27

	$$7  goto 60


state 57
	paramList : paramList ',' . type IDENT  (34)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	.  error

	type  goto 61


state 58
	method : OVERRIDE type IDENT $$8 '(' . auxParamList ')' $$9 declareList block  (31)
	auxParamList : .  (33)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	')'  reduce 33

	type  goto 50
	auxParamList  goto 62
	paramList  goto 52


state 59
	method : type IDENT $$4 '(' auxParamList . ')' $$5 declareList block  (25)

	')'  shift 63
	.  error


state 60
	method : IDENT $$6 '(' auxParamList ')' $$7 . declareList block  (28)
	declareList : .  (11)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	'{'  reduce 11

	type  goto 28
	declareList  goto 64
	declare  goto 30


state 61
	paramList : paramList ',' type . IDENT  (34)

	IDENT  shift 65
	.  error


state 62
	method : OVERRIDE type IDENT $$8 '(' auxParamList . ')' $$9 declareList block  (31)

	')'  shift 66
	.  error


state 63
	method : type IDENT $$4 '(' auxParamList ')' . $$5 declareList block  (25)
	$$5 : .  (24)

	.  reduce 24

	$$5  goto 67


state 64
	method : IDENT $$6 '(' auxParamList ')' $$7 declareList . block  (28)

	'{'  shift 68
	.  error

	block  goto 69


state 65
	paramList : paramList ',' type IDENT .  (34)

	.  reduce 34


state 66
	method : OVERRIDE type IDENT $$8 '(' auxParamList ')' . $$9 declareList block  (31)
	$$9 : .  (30)

	.  reduce 30

	$$9  goto 70


state 67
	method : type IDENT $$4 '(' auxParamList ')' $$5 . declareList block  (25)
	declareList : .  (11)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	'{'  reduce 11

	type  goto 28
	declareList  goto 71
	declare  goto 30


state 68
	block : '{' . cmdList '}'  (36)
	cmdList : .  (38)

	.  reduce 38

	cmdList  goto 72


state 69
	method : IDENT $$6 '(' auxParamList ')' $$7 declareList block .  (28)

	.  reduce 28


state 70
	method : OVERRIDE type IDENT $$8 '(' auxParamList ')' $$9 . declareList block  (31)
	declareList : .  (11)

	IDENT  shift 23
	INT  shift 24
	DOUBLE  shift 25
	BOOL  shift 26
	VOID  shift 27
	'{'  reduce 11

	type  goto 28
	declareList  goto 73
	declare  goto 30


state 71
	method : type IDENT $$4 '(' auxParamList ')' $$5 declareList . block  (25)

	'{'  shift 68
	.  error

	block  goto 74


state 72
	block : '{' cmdList . '}'  (36)
	cmdList : cmdList . cmd  (37)

	IDENT  shift 75
	NEW  shift 76
	IF  shift 77
	WHILE  shift 78
	FOR  shift 79
	PRINT  shift 80
	SCAN  shift 81
	BREAK  shift 82
	RETURN  shift 83
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'{'  shift 68
	'}'  shift 86
	'('  shift 87
	.  error

	exp  goto 88
	block  goto 89
	cmd  goto 90


state 73
	method : OVERRIDE type IDENT $$8 '(' auxParamList ')' $$9 declareList . block  (31)

	'{'  shift 68
	.  error

	block  goto 91


state 74
	method : type IDENT $$4 '(' auxParamList ')' $$5 declareList block .  (25)

	.  reduce 25


state 75
	exp : IDENT . '(' auxArgList ')'  (67)
	exp : IDENT .  (70)

	'('  shift 92
	AND  reduce 70
	'='  reduce 70
	'>'  reduce 70
	'<'  reduce 70
	'*'  reduce 70
	'/'  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	':'  reduce 70
	';'  reduce 70
	','  reduce 70
	')'  reduce 70


state 76
	exp : NEW . IDENT $$13 '(' auxArgList ')'  (69)

	IDENT  shift 93
	.  error


state 77
	cmd : IF . exp ':' cmd ELSE ':' cmd ENDIF  (40)
	cmd : IF . exp ':' cmd ENDIF  (41)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 94


state 78
	cmd : WHILE . $$10 exp ':' cmd ENDWHILE  (43)
	$$10 : .  (42)

	.  reduce 42

	$$10  goto 95


state 79
	cmd : FOR . $$11 exp ';' exp ';' exp ':' ENDFOR  (45)
	$$11 : .  (44)

	.  reduce 44

	$$11  goto 96


state 80
	cmd : PRINT . '(' argList ')' ';'  (46)

	'('  shift 97
	.  error


state 81
	cmd : SCAN . '(' IDENT ')' ';'  (47)

	'('  shift 98
	.  error


state 82
	cmd : BREAK .  (49)

	.  reduce 49


state 83
	cmd : RETURN . exp $$12 ';'  (51)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 99


state 84
	exp : NUMINT .  (63)

	.  reduce 63


state 85
	exp : NUMDOUBLE .  (64)

	.  reduce 64


state 86
	block : '{' cmdList '}' .  (36)

	.  reduce 36


state 87
	exp : '(' . exp ')'  (65)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 100


state 88
	cmd : exp . ';'  (39)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	';'  shift 109
	.  error


state 89
	cmd : block .  (48)

	.  reduce 48


state 90
	cmdList : cmdList cmd .  (37)

	.  reduce 37


state 91
	method : OVERRIDE type IDENT $$8 '(' auxParamList ')' $$9 declareList block .  (31)

	.  reduce 31


state 92
	exp : IDENT '(' . auxArgList ')'  (67)
	auxArgList : .  (53)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	')'  reduce 53

	exp  goto 110
	argList  goto 111
	auxArgList  goto 112


state 93
	exp : NEW IDENT . $$13 '(' auxArgList ')'  (69)
	$$13 : .  (68)

	.  reduce 68

	$$13  goto 113


state 94
	cmd : IF exp . ':' cmd ELSE ':' cmd ENDIF  (40)
	cmd : IF exp . ':' cmd ENDIF  (41)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	':'  shift 114
	.  error


state 95
	cmd : WHILE $$10 . exp ':' cmd ENDWHILE  (43)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 115


state 96
	cmd : FOR $$11 . exp ';' exp ';' exp ':' ENDFOR  (45)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 116


state 97
	cmd : PRINT '(' . argList ')' ';'  (46)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 110
	argList  goto 117


state 98
	cmd : SCAN '(' . IDENT ')' ';'  (47)

	IDENT  shift 118
	.  error


state 99
	cmd : RETURN exp . $$12 ';'  (51)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)
	$$12 : .  (50)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	';'  reduce 50

	$$12  goto 119


state 100
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : '(' exp . ')'  (65)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	')'  shift 120
	.  error


state 101
	exp : exp AND . exp  (62)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 121


state 102
	exp : exp '=' . exp  (66)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 122


state 103
	exp : exp '>' . exp  (61)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 123


state 104
	exp : exp '<' . exp  (60)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 124


state 105
	exp : exp '*' . exp  (57)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 125


state 106
	exp : exp '/' . exp  (59)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 126


state 107
	exp : exp '+' . exp  (56)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 127


state 108
	exp : exp '-' . exp  (58)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 128


state 109
	cmd : exp ';' .  (39)

	.  reduce 39


state 110
	argList : exp .  (55)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	','  reduce 55
	')'  reduce 55


state 111
	auxArgList : argList .  (52)
	argList : argList . ',' exp  (54)

	','  shift 129
	')'  reduce 52


state 112
	exp : IDENT '(' auxArgList . ')'  (67)

	')'  shift 130
	.  error


state 113
	exp : NEW IDENT $$13 . '(' auxArgList ')'  (69)

	'('  shift 131
	.  error


state 114
	cmd : IF exp ':' . cmd ELSE ':' cmd ENDIF  (40)
	cmd : IF exp ':' . cmd ENDIF  (41)

	IDENT  shift 75
	NEW  shift 76
	IF  shift 77
	WHILE  shift 78
	FOR  shift 79
	PRINT  shift 80
	SCAN  shift 81
	BREAK  shift 82
	RETURN  shift 83
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'{'  shift 68
	'('  shift 87
	.  error

	exp  goto 88
	block  goto 89
	cmd  goto 132


state 115
	cmd : WHILE $$10 exp . ':' cmd ENDWHILE  (43)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	':'  shift 133
	.  error


state 116
	cmd : FOR $$11 exp . ';' exp ';' exp ':' ENDFOR  (45)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	';'  shift 134
	.  error


state 117
	cmd : PRINT '(' argList . ')' ';'  (46)
	argList : argList . ',' exp  (54)

	','  shift 129
	')'  shift 135
	.  error


state 118
	cmd : SCAN '(' IDENT . ')' ';'  (47)

	')'  shift 136
	.  error


state 119
	cmd : RETURN exp $$12 . ';'  (51)

	';'  shift 137
	.  error


state 120
	exp : '(' exp ')' .  (65)

	.  reduce 65


state 121
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp AND exp .  (62)
	exp : exp . '=' exp  (66)

	.  reduce 62


state 122
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)
	exp : exp '=' exp .  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	':'  reduce 66
	';'  reduce 66
	','  reduce 66
	')'  reduce 66


state 123
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp '>' exp .  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	'='  reduce 61
	':'  reduce 61
	';'  reduce 61
	','  reduce 61
	')'  reduce 61


state 124
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp '<' exp .  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	'='  reduce 60
	'>'  reduce 60
	':'  reduce 60
	';'  reduce 60
	','  reduce 60
	')'  reduce 60


state 125
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp '*' exp .  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	'='  reduce 57
	'>'  reduce 57
	'<'  reduce 57
	':'  reduce 57
	';'  reduce 57
	','  reduce 57
	')'  reduce 57


state 126
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp '/' exp .  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	'='  reduce 59
	'>'  reduce 59
	'<'  reduce 59
	'*'  reduce 59
	':'  reduce 59
	';'  reduce 59
	','  reduce 59
	')'  reduce 59


state 127
	exp : exp . '+' exp  (56)
	exp : exp '+' exp .  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'-'  shift 108
	'='  reduce 56
	'>'  reduce 56
	'<'  reduce 56
	'*'  reduce 56
	'/'  reduce 56
	'+'  reduce 56
	':'  reduce 56
	';'  reduce 56
	','  reduce 56
	')'  reduce 56


state 128
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp '-' exp .  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  reduce 58
	'>'  reduce 58
	'<'  reduce 58
	'*'  reduce 58
	'/'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	':'  reduce 58
	';'  reduce 58
	','  reduce 58
	')'  reduce 58


state 129
	argList : argList ',' . exp  (54)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 138


state 130
	exp : IDENT '(' auxArgList ')' .  (67)

	.  reduce 67


state 131
	exp : NEW IDENT $$13 '(' . auxArgList ')'  (69)
	auxArgList : .  (53)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	')'  reduce 53

	exp  goto 110
	argList  goto 111
	auxArgList  goto 139


state 132
	cmd : IF exp ':' cmd . ELSE ':' cmd ENDIF  (40)
	cmd : IF exp ':' cmd . ENDIF  (41)

	ENDIF  shift 140
	ELSE  shift 141
	.  error


state 133
	cmd : WHILE $$10 exp ':' . cmd ENDWHILE  (43)

	IDENT  shift 75
	NEW  shift 76
	IF  shift 77
	WHILE  shift 78
	FOR  shift 79
	PRINT  shift 80
	SCAN  shift 81
	BREAK  shift 82
	RETURN  shift 83
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'{'  shift 68
	'('  shift 87
	.  error

	exp  goto 88
	block  goto 89
	cmd  goto 142


state 134
	cmd : FOR $$11 exp ';' . exp ';' exp ':' ENDFOR  (45)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 143


state 135
	cmd : PRINT '(' argList ')' . ';'  (46)

	';'  shift 144
	.  error


state 136
	cmd : SCAN '(' IDENT ')' . ';'  (47)

	';'  shift 145
	.  error


state 137
	cmd : RETURN exp $$12 ';' .  (51)

	.  reduce 51


state 138
	argList : argList ',' exp .  (54)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	','  reduce 54
	')'  reduce 54


state 139
	exp : NEW IDENT $$13 '(' auxArgList . ')'  (69)

	')'  shift 146
	.  error


state 140
	cmd : IF exp ':' cmd ENDIF .  (41)

	.  reduce 41


state 141
	cmd : IF exp ':' cmd ELSE . ':' cmd ENDIF  (40)

	':'  shift 147
	.  error


state 142
	cmd : WHILE $$10 exp ':' cmd . ENDWHILE  (43)

	ENDWHILE  shift 148
	.  error


state 143
	cmd : FOR $$11 exp ';' exp . ';' exp ':' ENDFOR  (45)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	';'  shift 149
	.  error


state 144
	cmd : PRINT '(' argList ')' ';' .  (46)

	.  reduce 46


state 145
	cmd : SCAN '(' IDENT ')' ';' .  (47)

	.  reduce 47


state 146
	exp : NEW IDENT $$13 '(' auxArgList ')' .  (69)

	.  reduce 69


state 147
	cmd : IF exp ':' cmd ELSE ':' . cmd ENDIF  (40)

	IDENT  shift 75
	NEW  shift 76
	IF  shift 77
	WHILE  shift 78
	FOR  shift 79
	PRINT  shift 80
	SCAN  shift 81
	BREAK  shift 82
	RETURN  shift 83
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'{'  shift 68
	'('  shift 87
	.  error

	exp  goto 88
	block  goto 89
	cmd  goto 150


state 148
	cmd : WHILE $$10 exp ':' cmd ENDWHILE .  (43)

	.  reduce 43


state 149
	cmd : FOR $$11 exp ';' exp ';' . exp ':' ENDFOR  (45)

	IDENT  shift 75
	NEW  shift 76
	NUMINT  shift 84
	NUMDOUBLE  shift 85
	'('  shift 87
	.  error

	exp  goto 151


state 150
	cmd : IF exp ':' cmd ELSE ':' cmd . ENDIF  (40)

	ENDIF  shift 152
	.  error


state 151
	cmd : FOR $$11 exp ';' exp ';' exp . ':' ENDFOR  (45)
	exp : exp . '+' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '-' exp  (58)
	exp : exp . '/' exp  (59)
	exp : exp . '<' exp  (60)
	exp : exp . '>' exp  (61)
	exp : exp . AND exp  (62)
	exp : exp . '=' exp  (66)

	AND  shift 101
	'='  shift 102
	'>'  shift 103
	'<'  shift 104
	'*'  shift 105
	'/'  shift 106
	'+'  shift 107
	'-'  shift 108
	':'  shift 153
	.  error


state 152
	cmd : IF exp ':' cmd ELSE ':' cmd ENDIF .  (40)

	.  reduce 40


state 153
	cmd : FOR $$11 exp ';' exp ';' exp ':' . ENDFOR  (45)

	ENDFOR  shift 154
	.  error


state 154
	cmd : FOR $$11 exp ';' exp ';' exp ':' ENDFOR .  (45)

	.  reduce 45


44 terminals, 33 nonterminals
71 grammar rules, 155 states
